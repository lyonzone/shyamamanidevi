var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");


((function(){
    if (typeof this.RokSprocket == 'undefined') this.RokSprocket = {};
    else Object.merge(this.RokSprocket, {Showcase: null});

    var Showcase = new Class({

        Extends: this.RokSprocket.Features,

        options: {
            curve: 'cubic-bezier(0.37,0.61,0.59,0.87)',
            duration: '400ms',
            data: 'showcase',
            settings: {
                animation: 'crossfade',
                autoplay: false,
                delay: 5
            }
        },

        initialize: function(options){
            this.parent(options);

            Object.merge(this.animations.crossfade, {top: 0, left: 0});
        },

        toPosition: function(container, position){
            container = this.getContainer(container);
            if (!container.retrieve('roksprocket:' + this.data + ':attached')) return;

            this.stopTimer(container);

            var features = container.getElements('[data-' + this.data + '-pagination]'),
                current = container.getElement('[data-' + this.data + '-pagination][class=active]');

            if (!features.length) return;

            if (features[position] && features[position].hasClass('active')) return;

            if (position > features.length - 1) position = 0;
            if (position < 0) position = features.length - 1;

            if (features.length){
                features.removeClass('active');
                features[position].addClass('active');

                if (features[position].getParent('#rt-showcase')){
                    features.forEach(function(f, i){
                        f.getParent('#rt-showcase').removeClass('showcase-panel-' + (i + 1));
                    });
                    features[position].getParent('#rt-showcase').addClass('showcase-panel-' + (position + 1));
                }
            }

            this.animate(container, current.get('data-' + this.data + '-pagination') - 1, position);
        },

        animate: function(container, from, to){
            var panes = container.getElements('[data-' + this.data + '-pane]'),
                settings = this.getSettings(container),
                animation = this.animations[settings.animation] || this.animations.crossfade,
                current = panes[from],
                next = panes[to];

            if (Browser.ie && Browser.version < 8){
                contents.setStyle('zoom', 1);
                images.setStyle('zoom', 1);
            }

            var transition = settings.animation == 'random' ? this.getRandom() : animation,
                initialStyles = {display: 'block', 'z-index': 2, 'position': 'absolute', 'opacity': 0};

            ['top', 'right', 'bottom', 'left'].each(function(dir){
                next.style[dir] = '';
            }, this);

            panes.styles(Object.merge({}, transition.from, {position: 'absolute'}));
            current.styles(Object.merge({}, transition.to, {'z-index': 1, position: 'relative'}));
            next.styles(Object.merge({}, transition.from, initialStyles));

            if (Browser.ie && Browser.version < 9){
                next.set('morph', {
                    link: 'cancel',
                    duration: this.options.duration.toInt(),
                    transition: 'quad:in:out',
                    onComplete: function(){
                        next.styles(Object.merge({}, transition.to, {position: 'relative'}));
                        current.styles(Object.merge({}, transition.from, {position: 'absolute', display: 'none'}));
                        next.get('morph').removeEvents('onComplete');

                        if (settings.autoplay && settings.autoplay.toInt()) this.startTimer(container);
                    }.bind(this)
                }).morph(transition.to);

                current.set('morph', {
                    link: 'cancel',
                    duration: this.options.duration.toInt(),
                    transition: 'quad:in:out'
                }).morph(transition.from);
            } else {
                next.moofx(transition.to, {
                    duration: this.options.duration,
                    equation: this.options.curve,
                    callback: function(){
                        next.styles(Object.merge({}, transition.to, {position: 'relative'}));
                        current.styles(Object.merge({}, transition.from, {position: 'absolute'}));

                        if (settings.autoplay && settings.autoplay.toInt()) this.startTimer(container);
                    }.bind(this)
                });

                current.moofx(transition.from, {
                    duration: this.options.duration,
                    equation: this.options.curve
                });
            }

        }

    });

    this.RokSprocket.Showcase = Showcase;
})());


}
/*
     FILE ARCHIVED ON 16:27:29 Aug 12, 2019 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 11:32:33 Jan 29, 2022.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 63.568
  exclusion.robots: 0.099
  exclusion.robots.policy: 0.091
  RedisCDXSource: 0.62
  esindex: 0.008
  LoadShardBlock: 38.326 (3)
  PetaboxLoader3.datanode: 54.692 (5)
  CDXLines.iter: 21.966 (3)
  load_resource: 88.108 (2)
  PetaboxLoader3.resolve: 52.621 (2)
*/